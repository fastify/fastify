name: Publish release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version number to tag and release'
        required: true
        type: string
      prerelease:
        description: 'Release as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  release-npm:
    runs-on: ubuntu-latest
    environment: main
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: package.json
          check-latest: true

      - name: Install
        run: |
          npm install --ignore-scripts

      - name: Bump version
        id: bump
        run: |
          new_version=$(npm version ${{ inputs.version }} --no-git-tag-version | tail -n 1)
          echo "version=$new_version" >> $GITHUB_OUTPUT
          # Update VERSION constant in fastify.js
          version_number=${new_version#*v}
          sed -i "s/const VERSION = '[^']*'/const VERSION = '$version_number'/" fastify.js

      - name: Commit version bump
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git commit -a -m "Bumped ${{ steps.bump.outputs.version }}"
          git push origin HEAD:${{ github.ref }}

      - name: Publish new version
        run: |
          npm publish --access public --tag ${{ inputs.prerelease == true && 'next' || 'latest' }}

      - name: Create release notes
        run: |
          npx @matteo.collina/release-notes -a ${{ secrets.GITHUB_TOKEN }} -t ${{ steps.bump.outputs.version }} -r ${{ github.repository }} ${{ github.event.inputs.prerelease == 'true' && '-p' || '' }} -c ${{ github.ref }}
