
> fastify@1.11.1 test /home/cris7fe/fastify
> npm run lint && npm run unit && npm run typescript


> fastify@1.11.1 lint /home/cris7fe/fastify
> standard --verbose | snazzy && npm run lint:typescript


> fastify@1.11.1 lint:typescript /home/cris7fe/fastify
> standard --parser typescript-eslint-parser --plugin typescript test/types/*.ts fastify.d.ts


> fastify@1.11.1 unit /home/cris7fe/fastify
> tap -j4 test/*.test.js test/*/*.test.js

TAP version 13
ok 1 - test/404s.test.js # time=3704.261ms {
    # Subtest: default 404
        1..3
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=167.707ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - unsupported route # time=17.505ms
        
    ok 1 - default 404 # time=396.907ms
    
    # Subtest: customized 404
        1..5
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=23.524ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - unsupported route # time=10.174ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - with error object # time=9.232ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 5 - error object with headers property # time=7.725ms
        
    ok 2 - customized 404 # time=81.805ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=10.595ms
        
    ok 3 - custom header in notFound handler # time=20.233ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=24.134ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=66.4ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=19.762ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=23.475ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=35.51ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=195.121ms
    
    # Subtest: encapsulated 404
        1..9
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=50.959ms
        
        # Subtest: root insupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root insupported route # time=12.316ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported method # time=15.244ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported route # time=11.491ms
        
        # Subtest: unsupported method bis
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - unsupported method bis # time=10.916ms
        
        # Subtest: unsupported route bis
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route bis # time=3.54ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 3 # time=15.998ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - unsupported route 3 # time=7.254ms
        
    ok 5 - encapsulated 404 # time=183.575ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=91.993ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=43.156ms
    
    # Subtest: run hooks and middleware on default 404
        1..8
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - middleware called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onResponse called
        ok 7 - should not error
        ok 8 - should be equal
    ok 8 - run hooks and middleware on default 404 # time=66.459ms
    
    # Subtest: run non-encapsulated plugin hooks and middleware on default 404
        1..7
        ok 1 - onRequest called
        ok 2 - middleware called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 9 - run non-encapsulated plugin hooks and middleware on default 404 # time=36.587ms
    
    # Subtest: run non-encapsulated plugin hooks and middleware on custom 404
        1..13
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - middleware called
        ok 4 - middleware called
        ok 5 - preHandler called
        ok 6 - preHandler called
        ok 7 - onSend called
        ok 8 - onSend called
        ok 9 - onResponse called
        ok 10 - onResponse called
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 10 - run non-encapsulated plugin hooks and middleware on custom 404 # time=27.423ms
    
    # Subtest: run hooks and middleware with encapsulated 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - middleware called
        ok 5 - middleware 2 called
        ok 6 - preHandler called
        ok 7 - preHandler 2 called
        ok 8 - onSend called
        ok 9 - onSend 2 called
        ok 10 - onResponse called
        ok 11 - onResponse 2 called
        ok 12 - should not error
        ok 13 - should be equal
    ok 11 - run hooks and middleware with encapsulated 404 # time=39.17ms
    
    # Subtest: run middlewares on default 404
        1..4
        ok 1 - should not error
        ok 2 - middleware called
        ok 3 - should not error
        ok 4 - should be equal
    ok 12 - run middlewares on default 404 # time=38.519ms
    
    # Subtest: run middlewares with encapsulated 404
        1..5
        ok 1 - should not error
        ok 2 - middleware called
        ok 3 - middleware 2 called
        ok 4 - should not error
        ok 5 - should be equal
    ok 13 - run middlewares with encapsulated 404 # time=44.401ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 14 - hooks check 404 # time=39.908ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 15 - setNotFoundHandler should not suppress duplicated routes checking # time=7.934ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=52.015ms
        
    ok 16 - log debug for 404 # time=73.453ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 17 - Unknown method # time=94.908ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 18 - recognizes errors from the http-errors module # time=26.756ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 19 - the default 404 handler can be invoked inside a prefixed plugin # time=28.315ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=17.199ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=22.833ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 22 - cannot set notFoundHandler after binding # time=9.905ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - 404 inside onSend # time=23.084ms
    
    # Subtest: Not found on supported method (should return a 404)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 24 - Not found on supported method (should return a 404) # time=25.962ms
    
    # Subtest: Not found on unsupported method (should return a 404)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - Not found on unsupported method (should return a 404) # time=23.918ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 26 - onSend hooks run when an encapsulated route invokes the notFound handler # time=15.63ms
    
    # Subtest: beforeHandler for setNotFoundHandler
        1..8
        # Subtest: beforeHandler
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - beforeHandler # time=107.323ms
        
        # Subtest: beforeHandler should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 2 - beforeHandler should be called after preHandler hook # time=23.305ms
        
        # Subtest: beforeHandler should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 3 - beforeHandler should be unique per prefix # time=31.661ms
        
        # Subtest: beforeHandler should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - beforeHandler should handle errors # time=20.91ms
        
        # Subtest: beforeHandler should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - beforeHandler should handle errors with custom status code # time=19.317ms
        
        # Subtest: beforeHandler could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 6 - beforeHandler could accept an array of functions # time=20.708ms
        
        # Subtest: beforeHandler does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 7 - beforeHandler does not interfere with preHandler # time=35.581ms
        
        # Subtest: beforeHandler should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 8 - beforeHandler should keep the context # time=12.44ms
        
    ok 27 - beforeHandler for setNotFoundHandler # time=292.671ms
    
    1..27
    # time=2035.404ms
}

ok 2 - test/500s.test.js # time=2002.186ms {
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=120.666ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is _Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=21.144ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is _Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=32.683ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=33.919ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=106.126ms
    
    1..5
    # time=350.595ms
}

ok 3 - test/async-await.test.js # time=3586.575ms {
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=513.723ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=33.885ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=27.813ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should be equal
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=59.385ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=26.037ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=28.937ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 7 - support reply decorators with await # time=37.228ms
    
    # Subtest: support 204
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - support 204 # time=21.656ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 9 - inject async await # time=22.278ms
    
    # Subtest: inject async await - when the server is up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 10 - inject async await - when the server is up # time=216.598ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 11 - async await plugin # time=216.645ms
    
    # Subtest: does not call reply.send() twice if 204 reponse is already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - does not call reply.send() twice if 204 reponse is already sent # time=24.222ms
    
    # Subtest: error is logged because promise was fulfilled with undefined
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - error is logged because promise was fulfilled with undefined # time=524.159ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but statusCode 204 was set
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 14 - error is not logged because promise was fulfilled with undefined but statusCode 204 was set # time=43.107ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=26.351ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=42.684ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=22.771ms
    
    1..17
    # time=1920.71ms
}

ok 4 - test/beforeHandler.test.js # time=2016.832ms {
    # Subtest: beforeHandler
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 1 - beforeHandler # time=214.004ms
    
    # Subtest: beforeHandler should be called after preHandler hook
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 2 - beforeHandler should be called after preHandler hook # time=35.07ms
    
    # Subtest: beforeHandler should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 3 - beforeHandler should be unique per route # time=34.161ms
    
    # Subtest: beforeHandler should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - beforeHandler should handle errors # time=22.7ms
    
    # Subtest: beforeHandler should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 5 - beforeHandler should handle errors with custom status code # time=20.87ms
    
    # Subtest: beforeHandler could accept an array of functions
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 6 - beforeHandler could accept an array of functions # time=27.361ms
    
    # Subtest: beforeHandler does not interfere with preHandler
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 7 - beforeHandler does not interfere with preHandler # time=16.94ms
    
    # Subtest: beforeHandler should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 8 - beforeHandler should keep the context # time=11.469ms
    
    1..8
    # time=407.461ms
}

ok 5 - test/bodyLimit.test.js # time=1682.952ms {
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=199.353ms
    
    1..1
    # time=227.584ms
}

ok 6 - test/case-insensitive.test.js # time=1812.902ms {
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=244.108ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=49.952ms
    
    1..2
    # time=326.686ms
}

ok 7 - test/chainable.test.js # time=1743.344ms {
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=18.115ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=13.59ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=2.478ms
    
    1..3
    # time=137.45ms
}

ok 8 - test/close-pipelining.test.js # time=3089.251ms {
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        1..10
    ok 1 - Should return 503 while closing - pipelining # time=1223.897ms
    
    1..1
    # time=1256.262ms
}

ok 9 - test/close.test.js # time=2078.369ms {
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=172.455ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=23.876ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=30.912ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 4 - should not throw an error if the server is not listening # time=14.235ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 5 - onClose should keep the context # time=38.303ms
    
    # Subtest: Should return 503 while closing - injection
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 6 - Should return 503 while closing - injection # time=162.6ms
    
    1..6
    # time=528.822ms
}

ok 10 - test/context-config.test.js # time=1802.052ms {
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=132.725ms
    
    1..1
    # time=241.377ms
}

ok 11 - test/custom-http-server.test.js # time=1576.211ms {
    # Subtest: Should support a custom http server
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 1 - Should support a custom http server # time=218.243ms
    
    1..1
    # time=239.855ms
}

ok 12 - test/custom-parser.test.js # time=2854.394ms {
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=113.164ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=116.248ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=441.201ms
    
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 2 - contentTypeParser method should exist # time=16.874ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=33.727ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=19.885ms
        
    ok 3 - contentTypeParser should add a custom parser # time=87.93ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle multiple custom parsers # time=50.967ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 5 - contentTypeParser should handle an array of custom contentTypes # time=47.761ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - contentTypeParser should handle errors # time=26.673ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 7 - contentTypeParser should support encapsulation # time=18.685ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - contentTypeParser should support encapsulation, second try # time=39.941ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 9 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=27.02ms
    
    # Subtest: the content type should be a string
        1..1
        ok 1 - should be equal
    ok 10 - the content type should be a string # time=14.322ms
    
    # Subtest: the content type cannot be an empty string
        1..1
        ok 1 - should be equal
    ok 11 - the content type cannot be an empty string # time=5.288ms
    
    # Subtest: the content type handler should be a function
        1..1
        ok 1 - should be equal
    ok 12 - the content type handler should be a function # time=27.685ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser # time=36.982ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 14 - catch all content type parser should not interfere with other conte type parsers # time=45.834ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 15 - '*' catch undefined Content-Type requests # time=57.679ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 16 - cannot add custom parser after binding # time=32.242ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default json parser # time=34.647ms
    
    # Subtest: Can't override the json parser multiple times
        1..1
        ok 1 - should be equal
    ok 18 - Can't override the json parser multiple times # time=22.922ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 19 - Should get the body as string # time=44.341ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 20 - Should get the body as buffer # time=43.951ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 21 - Should parse empty bodies as a string # time=75.662ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 22 - Should parse empty bodies as a buffer # time=56.048ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 23 - The charset should not interfere with the content type handling # time=47.924ms
    
    # Subtest: Wrong parseAs parameter
        1..1
        ok 1 - should be equal
    ok 24 - Wrong parseAs parameter # time=18.403ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 25 - Should allow defining the bodyLimit per parser # time=63.195ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 26 - route bodyLimit should take precedence over a custom parser bodyLimit # time=55.578ms
    
    1..26
    # time=1519.421ms
}

ok 13 - test/decorator.test.js # time=2838.123ms {
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=63.758ms
    
    # Subtest: server methods should be incapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 2 - server methods should be incapsulated via .register # time=122.371ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - hasServerMethod should check if the given method already exist # time=22.859ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 4 - decorate should throw if a declared dependency is not present # time=16.43ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 5 - should pass error for missing request decorator # time=28.024ms
    
    # Subtest: decorateReply inside register
        1..12
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - test exists
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 6 - decorateReply inside register # time=238.813ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 7 - decorateReply as plugin (inside .after) # time=70.365ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply as plugin (outside .after) # time=61.461ms
    
    # Subtest: decorateRequest inside register
        1..12
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - test exists
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 9 - decorateRequest inside register # time=44.3ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateRequest as plugin (inside .after) # time=77.69ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest as plugin (outside .after) # time=78.161ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 12 - decorators should be instance separated # time=29.732ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=41.767ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=31.392ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 3 - should be plugin encapsulable # time=77.815ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 4 - should be inherited # time=34.16ms
        
        1..4
    ok 13 - hasRequestDecorator # time=248.308ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=10.946ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=2.53ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 3 - should be plugin encapsulable # time=48.692ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 4 - should be inherited # time=15.754ms
        
        1..4
    ok 14 - hasReplyDecorator # time=154.117ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect falsey value
    ok 15 - should register properties via getter/setter objects # time=15.265ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 16 - decorateRequest should work with getter/setter # time=41.175ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 17 - decorateReply should work with getter/setter # time=26.622ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 18 - should register empty values # time=17.875ms
    
    1..18
    # time=1436.923ms
}

ok 14 - test/delete.test.js # time=2468.697ms {
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=27.09ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=7.032ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=0.778ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=0.638ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=0.76ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=0.608ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=115.154ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=88.924ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=19.529ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=16.678ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=11.838ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=14.667ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=17.635ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=6.933ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=10.456ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=19.816ms
    
    1..17
    # time=539.39ms
}

ok 15 - test/error-in-post.test.js # time=2006.482ms {
    ok 1 - should be equal
    1..1
    # time=16.769ms
}

ok 16 - test/fastify-instance.test.js # time=1697.835ms {
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=40.35ms
    
    1..1
    # time=128.88ms
}

ok 17 - test/get.test.js # time=2169.49ms {
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=23.546ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=14.253ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=6.169ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=3.999ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=9.683ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=7.565ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=3.808ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=7.929ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=3.711ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=132.905ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=33.086ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=14.985ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=11.809ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=12.051ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=12.268ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=8.594ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=12.017ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=11.595ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=6.814ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=12.582ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=8.135ms
    
    1..22
    # time=578.725ms
}

ok 18 - test/handler-context.test.js # time=1759.838ms {
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=137.82ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=62.666ms
    
    1..2
    # time=232.581ms
}

ok 19 - test/head.test.js # time=1985.579ms {
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=24.503ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=12.952ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=5.215ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=9.865ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=95.531ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=19.779ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=15.592ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=11.183ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=7.482ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=9.251ms
    
    1..11
    # time=390.666ms
}

ok 20 - test/hooks.test.js # time=3755.538ms {
    # Subtest: hooks
        1..21
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should not error
        ok 19 - should be equal
        ok 20 - should not error
        ok 21 - should be equal
    ok 1 - hooks # time=567.952ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=46.881ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=16ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=54.212ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=45.941ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=11.708ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=15.604ms
    
    # Subtest: onRoute hook should be called / 3
        1..6
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - should not error
    ok 8 - onRoute hook should be called / 3 # time=25.002ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 9 - onRoute should keep the context # time=21.875ms
    
    # Subtest: onRoute hook should pass correct route
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
    ok 10 - onRoute hook should pass correct route # time=28.552ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 11 - onRoute hook should pass correct route with custom prefix # time=26.611ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 12 - onRoute hook should pass correct route with custom options # time=35.693ms
    
    # Subtest: onRoute hook should receive any route option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
    ok 13 - onRoute hook should receive any route option # time=16.331ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
    ok 14 - onRoute hook should preserve system route configuration # time=20.446ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 15 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=14.774ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 16 - onResponse hook should support encapsulation / 1 # time=43.153ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 17 - onResponse hook should support encapsulation / 2 # time=14.943ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 18 - onResponse hook should support encapsulation / 3 # time=36.592ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 19 - onSend hook should support encapsulation / 1 # time=16.134ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 20 - onSend hook should support encapsulation / 2 # time=38.612ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 21 - onSend hook is called after payload is serialized and headers are set # time=79.311ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 22 - modify payload # time=33.197ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 23 - clear payload # time=19.223ms
    
    # Subtest: onSend hook throws
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
    ok 24 - onSend hook throws # time=34.951ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 25 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=15.614ms
    
    # Subtest: onSend hook should receive valid request and reply objects if middleware fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 26 - onSend hook should receive valid request and reply objects if middleware fails # time=18.683ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 27 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=23.902ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 28 - cannot add hook after binding # time=18.502ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 29 - onRequest hooks should be able to block a request # time=20.657ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - preHandler hooks should be able to block a request # time=17.492ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 31 - onRequest hooks should be able to block a request (last hook) # time=25.196ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 32 - preHandler hooks should be able to block a request (last hook) # time=18.263ms
    
    # Subtest: onRequest respond with a stream
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
    ok 33 - onRequest respond with a stream # time=31.202ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 34 - preHandler respond with a stream # time=118.96ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 35 - Register an hook after a plugin inside a plugin # time=30.777ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with beforeHandler)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 36 - Register an hook after a plugin inside a plugin (with beforeHandler) # time=24.588ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 37 - Register hooks inside a plugin after an encapsulated plugin # time=31.413ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 38 - onRequest hooks should run in the order in which they are defined # time=41.163ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 39 - preHandler hooks should run in the order in which they are defined # time=26.97ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 40 - onSend hooks should run in the order in which they are defined # time=30.421ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 41 - onResponse hooks should run in the order in which they are defined # time=28.409ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 42 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=11.381ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 43 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=18.952ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 44 - If the content type has been set inside an hook it should not be changed # time=28.086ms
    
    # Subtest: async hooks
        1..19
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
        ok 16 - should not error
        ok 17 - should be equal
        ok 18 - expect truthy value
        ok 19 - expect truthy value
    ok 45 - async hooks # time=57.921ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 46 - modify payload # time=17.024ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 47 - onRequest hooks should be able to block a request # time=12.822ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 48 - preHandler hooks should be able to block a request # time=14.404ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 49 - onRequest hooks should be able to block a request (last hook) # time=12.645ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 50 - preHandler hooks should be able to block a request (last hook) # time=30.004ms
    
    # Subtest: onRequest respond with a stream
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
    ok 51 - onRequest respond with a stream # time=35.691ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 52 - preHandler respond with a stream # time=32.866ms
    
    1..52
    # time=2114.097ms
}

ok 21 - test/inject.test.js # time=3285.122ms {
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=64.04ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=646.262ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=25.417ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=26.152ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=27.926ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=16.536ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=20.746ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=19.831ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=18.288ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=39.002ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=27.052ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=35.969ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=28.841ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=20.561ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=29.415ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=519.731ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=29.483ms
    
    1..17
    # time=1639.754ms
}

ok 22 - test/input-validation.test.js # time=1815.927ms {
    # Subtest: case insensitive header validation
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 1 - case insensitive header validation # time=80.534ms
    
    1..1
    # time=165.662ms
}

ok 23 - test/listen.test.js # time=2470.207ms {
    # Subtest: listen accepts a port and a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 1 - listen accepts a port and a callback # time=177.071ms
    
    # Subtest: listen accepts a port and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 2 - listen accepts a port and a callback with (err, address) # time=21.211ms
    
    # Subtest: listen accepts a port, address, and callback
        1..1
        ok 1 - should not error
    ok 3 - listen accepts a port, address, and callback # time=20.945ms
    
    # Subtest: listen accepts a port, address and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 4 - listen accepts a port, address and a callback with (err, address) # time=17.861ms
    
    # Subtest: listen accepts a port, address, backlog and callback
        1..1
        ok 1 - should not error
    ok 5 - listen accepts a port, address, backlog and callback # time=24.382ms
    
    # Subtest: listen accepts a port, address, backlog and callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 6 - listen accepts a port, address, backlog and callback with (err, address) # time=9.399ms
    
    # Subtest: listen after Promise.resolve()
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 7 - listen after Promise.resolve() # time=86.958ms
    
    # Subtest: register after listen using Promise.resolve()
        1..1
        ok 1 - resolved
    ok 8 - register after listen using Promise.resolve() # time=28.722ms
    
    # Subtest: double listen errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
    ok 9 - double listen errors # time=16.164ms
    
    # Subtest: double listen errors callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 10 - double listen errors callback with (err, address) # time=22.13ms
    
    # Subtest: listen twice on the same port
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 11 - listen twice on the same port # time=36.032ms
    
    # Subtest: listen twice on the same port callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 12 - listen twice on the same port callback with (err, address) # time=26.197ms
    
    # Subtest: listen on socket
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - listen on socket # time=20.604ms
    
    # Subtest: listen without callback
        1..1
        ok 1 - should be equal
    ok 14 - listen without callback # time=32.764ms
    
    # Subtest: listen null without callback with (address)
        1..1
        ok 1 - should be equal
    ok 15 - listen null without callback with (address) # time=9.738ms
    
    # Subtest: listen without port without callback with (address)
        1..1
        ok 1 - should be equal
    ok 16 - listen without port without callback with (address) # time=9.711ms
    
    # Subtest: listen with undefined without callback with (address)
        1..1
        ok 1 - should be equal
    ok 17 - listen with undefined without callback with (address) # time=6.232ms
    
    # Subtest: listen without callback with (address)
        1..1
        ok 1 - should be equal
    ok 18 - listen without callback with (address) # time=16.062ms
    
    # Subtest: double listen without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 19 - double listen without callback rejects # time=10.935ms
    
    # Subtest: double listen without callback with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 20 - double listen without callback with (address) # time=19.518ms
    
    # Subtest: listen twice on the same port without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 21 - listen twice on the same port without callback rejects # time=23.973ms
    
    # Subtest: listen twice on the same port without callback rejects with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 22 - listen twice on the same port without callback rejects with (address) # time=39.189ms
    
    # Subtest: listen on invalid port without callback rejects
        ok 1 - expect truthy value
        1..1
    ok 23 - listen on invalid port without callback rejects # time=12.243ms
    
    # Subtest: listen logs the port as info
        1..1
        ok 1 - expect truthy value
    ok 24 - listen logs the port as info # time=9.133ms
    
    1..24
    # time=878.089ms
}

ok 24 - test/logger.test.js # time=2781.984ms {
    # Subtest: defaults to info level
        1..13
        ok 1 - listen at log message is ok
        ok 2 - should not error
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
    ok 1 - defaults to info level # time=290.035ms
    
    # Subtest: test log stream
        1..12
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
    ok 2 - test log stream # time=67.988ms
    
    # Subtest: test error log stream
        1..11
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - reqId is defined
        ok 9 - res is defined
        ok 10 - message is set
        ok 11 - statusCode is 500
    ok 3 - test error log stream # time=58.767ms
    
    # Subtest: can use external logger instance
        1..6
        ok 1 - "Server listening at http://127.0.0.1:34581" dont match "/^Server listening at /"
        ok 2 - should not error
        ok 3 - "incoming request" dont match "/^incoming request$/"
        ok 4 - expect truthy value
        ok 5 - "log success" dont match "/^log success$/"
        ok 6 - "request completed" dont match "/^request completed$/"
    ok 4 - can use external logger instance # time=131.89ms
    
    # Subtest: can use external logger instance with custom serializer
        1..6
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - expect truthy value
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 5 - can use external logger instance with custom serializer # time=47.405ms
    
    # Subtest: expose the logger
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 6 - expose the logger # time=7.635ms
    
    # Subtest: The logger should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 7 - The logger should accept a custom genReqId function # time=38.724ms
    
    # Subtest: The request id header key can be customized
        1..9
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - message is set
        ok 6 - should be equal
        ok 7 - message is set
        ok 8 - should be equal
        ok 9 - message is set
    ok 8 - The request id header key can be customized # time=36.614ms
    
    # Subtest: The logger should accept custom serializer
        1..9
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - req is defined
        ok 4 - message is set
        ok 5 - custom req serialiser is use
        ok 6 - expect truthy value
        ok 7 - res is defined
        ok 8 - message is set
        ok 9 - default res serialiser is use
    ok 9 - The logger should accept custom serializer # time=44.434ms
    
    # Subtest: reply.send logs an error if called twice in a row
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 10 - reply.send logs an error if called twice in a row # time=32.814ms
    
    # Subtest: logger can be silented
        1..17
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
    ok 11 - logger can be silented # time=25.261ms
    
    # Subtest: Should set a custom logLevel for a plugin
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 12 - Should set a custom logLevel for a plugin # time=41.06ms
    
    # Subtest: Should set a custom logLevel for every plugin
        1..18
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - expect truthy value
        ok 15 - expect truthy value
        ok 16 - expect truthy value
        ok 17 - should not error
        ok 18 - should be equivalent
    ok 13 - Should set a custom logLevel for every plugin # time=51.134ms
    
    # Subtest: Should increase the log level for a specific plugin
        1..4
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 14 - Should increase the log level for a specific plugin # time=28.056ms
    
    # Subtest: Should set the log level for the customized 404 handler
        1..4
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - Should set the log level for the customized 404 handler # time=20.894ms
    
    # Subtest: Should set the log level for the customized 500 handler
        1..4
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 16 - Should set the log level for the customized 500 handler # time=62.17ms
    
    # Subtest: Should set a custom log level for a specific route
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 17 - Should set a custom log level for a specific route # time=47.477ms
    
    # Subtest: The default 404 handler logs the incoming request
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 18 - The default 404 handler logs the incoming request # time=36.542ms
    
    # Subtest: should serialize request and response
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 19 - should serialize request and response # time=24.846ms
    
    # Subtest: Wrap IPv6 address in listening log message
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 20 - Wrap IPv6 address in listening log message # time=34.89ms
    
    # Subtest: Do not wrap IPv4 address
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 21 - Do not wrap IPv4 address # time=28.59ms
    
    1..21
    # time=1262.74ms
}

ok 25 - test/middleware.test.js # time=3117.799ms {
    # Subtest: use a middleware
        1..7
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - middleware called
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 1 - use a middleware # time=315.827ms
    
    # Subtest: cannot add middleware after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 2 - cannot add middleware after binding # time=18.88ms
    
    # Subtest: use cors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 3 - use cors # time=40.22ms
    
    # Subtest: use helmet
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
    ok 4 - use helmet # time=35.81ms
    
    # Subtest: use helmet and cors
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 5 - use helmet and cors # time=21.553ms
    
    # Subtest: middlewares should support encapsulation / 1
        1..8
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 6 - middlewares should support encapsulation / 1 # time=36.334ms
    
    # Subtest: middlewares should support encapsulation / 2
        1..13
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
    ok 7 - middlewares should support encapsulation / 2 # time=44.348ms
    
    # Subtest: middlewares should support encapsulation / 3
        1..15
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 8 - middlewares should support encapsulation / 3 # time=51.814ms
    
    # Subtest: middlewares should support encapsulation / 4
        1..25
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect falsey value
        ok 13 - expect falsey value
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - expect truthy value
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - should not error
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equivalent
    ok 9 - middlewares should support encapsulation / 4 # time=62.525ms
    
    # Subtest: middlewares should support encapsulation / 5
        1..9
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 10 - middlewares should support encapsulation / 5 # time=78.929ms
    
    # Subtest: middlewares should support encapsulation with prefix
        1..9
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 11 - middlewares should support encapsulation with prefix # time=56.556ms
    
    # Subtest: middlewares should support non-encapsulated plugins
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 12 - middlewares should support non-encapsulated plugins # time=79.699ms
    
    # Subtest: use serve-static
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 13 - use serve-static # time=54.419ms
    
    # Subtest: middlewares with prefix
        1..5
        ok 1 - should not error
        # Subtest: /
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 2 - / # time=35.164ms
        
        # Subtest: /prefix
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - /prefix # time=17.539ms
        
        # Subtest: /prefix/
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - /prefix/ # time=15.254ms
        
        # Subtest: /prefix/inner
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 5 - /prefix/inner # time=15.696ms
        
    ok 14 - middlewares with prefix # time=128.377ms
    
    # Subtest: res.end should block middleware execution
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 15 - res.end should block middleware execution # time=23.42ms
    
    # Subtest: middlewares should be able to respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 16 - middlewares should be able to respond with a stream # time=53.645ms
    
    # Subtest: Use a middleware inside a plugin after an encapsulated plugin
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 17 - Use a middleware inside a plugin after an encapsulated plugin # time=26.781ms
    
    # Subtest: middlewares should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 18 - middlewares should run in the order in which they are defined # time=50.818ms
    
    1..18
    # time=1241.452ms
}

ok 26 - test/options.test.js # time=2869.608ms {
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=20.228ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=10.01ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=17.613ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=1.034ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=15.143ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=197.199ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - correctly replies with very large body # time=38.237ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - correctly replies if the content type has the charset # time=13.065ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS without schema - correctly replies # time=8.284ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS with body and querystring - correctly replies # time=14.71ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - OPTIONS with no body - correctly replies # time=41.727ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - OPTIONS returns 415 - incorrect media type if body is not json # time=10.722ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - OPTIONS returns 415 - should return 415 if Content-Type is not json # time=17.613ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - OPTIONS returns 400 - Bad Request # time=20.026ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - OPTIONS returns 413 - Payload Too Large # time=13.297ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - OPTIONS - correctly replies # time=14.921ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS - 400 on bad parameters # time=20.012ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS - input-validation coerce # time=12.312ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - OPTIONS - input-validation custom schema compiler # time=16.043ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - OPTIONS - input-validation joi schema compiler ok # time=13.953ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - OPTIONS - input-validation joi schema compiler ko # time=17.888ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=11.049ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - OPTIONS - input-validation custom schema compiler encapsulated # time=19.842ms
    
    1..23
    # time=1145.061ms
}

ok 27 - test/output-validation.test.js # time=2097.162ms {
    # Subtest: shorthand - output string
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - output string # time=18.696ms
    
    # Subtest: shorthand - output number
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - output number # time=13.583ms
    
    # Subtest: wrong object for schema - output
        1..1
        ok 1 - (unnamed test)
    ok 3 - wrong object for schema - output # time=3.31ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 4 - empty response # time=3.785ms
    
    # Subtest: unlisted response code
        1..1
        ok 1 - (unnamed test)
    ok 5 - unlisted response code # time=13.872ms
    
    ok 6 - should not error
    # Subtest: shorthand - string get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - string get ok # time=95.303ms
    
    # Subtest: shorthand - number get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - shorthand - number get ok # time=14.213ms
    
    # Subtest: shorthand - wrong-object-for-schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - wrong-object-for-schema # time=9.739ms
    
    # Subtest: shorthand - empty
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - empty # time=10ms
    
    # Subtest: shorthand - 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - 400 # time=17.494ms
    
    1..11
    # time=380.092ms
}

ok 28 - test/patch.test.js # time=2862.413ms {
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=19.783ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=12.232ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=6.733ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=1.212ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=12.318ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=155.581ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=24.101ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=12.75ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=10.537ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=15.017ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=45.826ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=11.732ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=17.153ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=75.408ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - PATCH - correctly replies # time=23.159ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - 400 on bad parameters # time=9.837ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - input-validation coerce # time=13.617ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation custom schema compiler # time=12.91ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation joi schema compiler ok # time=18.308ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ko # time=17.005ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation instance custom schema compiler encapsulated # time=11.244ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation custom schema compiler encapsulated # time=15.542ms
    
    1..22
    # time=1142.588ms
}

ok 29 - test/plugin.test.js # time=2604.017ms {
    # Subtest: require a plugin
        1..1
        ok 1 - expect truthy value
    ok 1 - require a plugin # time=127.832ms
    
    # Subtest: fastify.register with fastify-plugin should not incapsulate his code
        1..10
        ok 1 - expect falsey value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 2 - fastify.register with fastify-plugin should not incapsulate his code # time=118.271ms
    
    # Subtest: fastify.register with fastify-plugin registers root level plugins
        1..15
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 3 - fastify.register with fastify-plugin registers root level plugins # time=70.127ms
    
    # Subtest: check dependencies - should not throw
        1..12
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 4 - check dependencies - should not throw # time=117.987ms
    
    # Subtest: check dependencies - should throw
        1..11
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - expect falsey value
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 5 - check dependencies - should throw # time=48.193ms
    
    # Subtest: plugin incapsulation
        1..10
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 6 - plugin incapsulation # time=46.865ms
    
    # Subtest: if a plugin raises an error and there is not a callback to handle it, the server must not start
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 7 - if a plugin raises an error and there is not a callback to handle it, the server must not start # time=15.305ms
    
    # Subtest: add hooks after route declaration
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 8 - add hooks after route declaration # time=44.012ms
    
    # Subtest: nested plugins
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 9 - nested plugins # time=46.976ms
    
    # Subtest: plugin metadata - decorators
        1..1
        ok 1 - expect truthy value
    ok 10 - plugin metadata - decorators # time=12.612ms
    
    # Subtest: plugin metadata - dependencies
        1..1
        ok 1 - everything right
    ok 11 - plugin metadata - dependencies # time=15.876ms
    
    # Subtest: plugin metadata - dependencies (nested)
        1..1
        ok 1 - everything right
    ok 12 - plugin metadata - dependencies (nested) # time=40.655ms
    
    # Subtest: pluginTimeout
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 13 - pluginTimeout # time=31.452ms
    
    1..13
    # time=948.063ms
}

ok 30 - test/post.test.js # time=2860.769ms {
    # Subtest: POST can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - POST can be created # time=18.139ms
    
    # Subtest: POST without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - POST without schema can be created # time=6.81ms
    
    # Subtest: POST with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - POST with body and querystring # time=11.648ms
    
    # Subtest: POST with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - POST with bodyLimit option # time=4.277ms
    
    # Subtest: POST can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - POST can be created # time=13.232ms
    
    # Subtest: cannot set schemaCompiler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 6 - cannot set schemaCompiler after binding # time=366.85ms
    
    # Subtest: POST - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - POST - correctly replies # time=205.006ms
    
    # Subtest: POST - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - POST - correctly replies with very large body # time=27.644ms
    
    # Subtest: POST - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - POST - correctly replies if the content type has the charset # time=22.2ms
    
    # Subtest: POST without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - POST without schema - correctly replies # time=7.462ms
    
    # Subtest: POST with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - POST with body and querystring - correctly replies # time=26.321ms
    
    # Subtest: POST with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - POST with no body - correctly replies # time=43.841ms
    
    # Subtest: POST returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - POST returns 415 - incorrect media type if body is not json # time=16.527ms
    
    # Subtest: POST returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - POST returns 400 - Bad Request # time=26.45ms
    
    # Subtest: POST returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 15 - POST returns 413 - Payload Too Large # time=78.37ms
    
    # Subtest: POST - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - POST - correctly replies # time=21.76ms
    
    # Subtest: POST - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - POST - 400 on bad parameters # time=13.168ms
    
    # Subtest: POST - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - POST - input-validation coerce # time=17.901ms
    
    # Subtest: POST - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - POST - input-validation custom schema compiler # time=19.5ms
    
    # Subtest: POST - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - POST - input-validation joi schema compiler ok # time=23.698ms
    
    # Subtest: POST - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - POST - input-validation joi schema compiler ko # time=21.625ms
    
    # Subtest: POST - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - POST - input-validation instance custom schema compiler encapsulated # time=13.124ms
    
    # Subtest: POST - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - POST - input-validation custom schema compiler encapsulated # time=17.594ms
    
    1..23
    # time=1235.083ms
}

ok 31 - test/pretty-print.test.js # time=1834.354ms {
    # Subtest: pretty print - static routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - pretty print - static routes # time=102.596ms
    
    # Subtest: pretty print - parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - pretty print - parametric routes # time=18.524ms
    
    # Subtest: pretty print - mixed parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - pretty print - mixed parametric routes # time=15.19ms
    
    # Subtest: pretty print - wildcard routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - pretty print - wildcard routes # time=19.679ms
    
    1..4
    # time=247.375ms
}

ok 32 - test/promises.test.js # time=1970.884ms {
    ok 1 - should not error
    # Subtest: shorthand - sget return promise es6 get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - shorthand - sget return promise es6 get # time=104.475ms
    
    # Subtest: shorthand - sget promise es6 get return error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - shorthand - sget promise es6 get return error # time=24.705ms
    
    # Subtest: sget promise double send
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - sget promise double send # time=23.308ms
    
    1..4
    # time=212.696ms
}

ok 33 - test/put.test.js # time=2860.665ms {
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=21.253ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=9.255ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=11.495ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=7.306ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=18.415ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=160.678ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=32.442ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=19.274ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=11.822ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=18.947ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=39.482ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=16.085ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=19.991ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=92.06ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - PUT - correctly replies # time=14.182ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - 400 on bad parameters # time=12.994ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - input-validation coerce # time=18.274ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation custom schema compiler # time=15.499ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation joi schema compiler ok # time=17.492ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ko # time=22.02ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation instance custom schema compiler encapsulated # time=18.526ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation custom schema compiler encapsulated # time=10.168ms
    
    1..22
    # time=1201.276ms
}

ok 34 - test/register.test.js # time=1976.216ms {
    # Subtest: register
        1..17
        ok 1 - should not be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - expect truthy value
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 1 - register # time=267.796ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the next handler / 1
        1..1
        ok 1 - should be equal
    ok 2 - internal route declaration should pass the error generated by the register to the next handler / 1 # time=23.601ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the next handler / 2
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 3 - internal route declaration should pass the error generated by the register to the next handler / 2 # time=21.893ms
    
    1..3
    # time=353.487ms
}

ok 35 - test/reply-error.test.js # time=3968.227ms {
    # Subtest: Reply error handling - code: 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Reply error handling - code: 400 # time=415.602ms
    
    # Subtest: Reply error handling - code: 401
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - Reply error handling - code: 401 # time=39.178ms
    
    # Subtest: Reply error handling - code: 402
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - Reply error handling - code: 402 # time=28.889ms
    
    # Subtest: Reply error handling - code: 403
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - Reply error handling - code: 403 # time=48.578ms
    
    # Subtest: Reply error handling - code: 404
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 5 - Reply error handling - code: 404 # time=18.451ms
    
    # Subtest: Reply error handling - code: 405
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - Reply error handling - code: 405 # time=22.357ms
    
    # Subtest: Reply error handling - code: 406
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - Reply error handling - code: 406 # time=24.248ms
    
    # Subtest: Reply error handling - code: 407
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - Reply error handling - code: 407 # time=25.886ms
    
    # Subtest: Reply error handling - code: 408
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - Reply error handling - code: 408 # time=27.048ms
    
    # Subtest: Reply error handling - code: 409
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - Reply error handling - code: 409 # time=20.893ms
    
    # Subtest: Reply error handling - code: 410
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - Reply error handling - code: 410 # time=24.436ms
    
    # Subtest: Reply error handling - code: 411
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - Reply error handling - code: 411 # time=30.46ms
    
    # Subtest: Reply error handling - code: 412
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - Reply error handling - code: 412 # time=29.144ms
    
    # Subtest: Reply error handling - code: 413
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - Reply error handling - code: 413 # time=19.497ms
    
    # Subtest: Reply error handling - code: 414
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - Reply error handling - code: 414 # time=65.161ms
    
    # Subtest: Reply error handling - code: 415
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - Reply error handling - code: 415 # time=40.991ms
    
    # Subtest: Reply error handling - code: 416
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - Reply error handling - code: 416 # time=23.679ms
    
    # Subtest: Reply error handling - code: 417
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - Reply error handling - code: 417 # time=23.233ms
    
    # Subtest: Reply error handling - code: 418
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - Reply error handling - code: 418 # time=27.994ms
    
    # Subtest: Reply error handling - code: 421
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - Reply error handling - code: 421 # time=23.98ms
    
    # Subtest: Reply error handling - code: 422
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - Reply error handling - code: 422 # time=19.375ms
    
    # Subtest: Reply error handling - code: 423
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - Reply error handling - code: 423 # time=23.373ms
    
    # Subtest: Reply error handling - code: 424
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - Reply error handling - code: 424 # time=21.012ms
    
    # Subtest: Reply error handling - code: 425
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 24 - Reply error handling - code: 425 # time=23.477ms
    
    # Subtest: Reply error handling - code: 426
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 25 - Reply error handling - code: 426 # time=15.128ms
    
    # Subtest: Reply error handling - code: 428
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 26 - Reply error handling - code: 428 # time=28.13ms
    
    # Subtest: Reply error handling - code: 429
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 27 - Reply error handling - code: 429 # time=27.195ms
    
    # Subtest: Reply error handling - code: 431
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 28 - Reply error handling - code: 431 # time=16.3ms
    
    # Subtest: Reply error handling - code: 451
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 29 - Reply error handling - code: 451 # time=17.531ms
    
    # Subtest: Reply error handling - code: 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 30 - Reply error handling - code: 500 # time=40.03ms
    
    # Subtest: Reply error handling - code: 501
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 31 - Reply error handling - code: 501 # time=23.337ms
    
    # Subtest: Reply error handling - code: 502
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 32 - Reply error handling - code: 502 # time=20.221ms
    
    # Subtest: Reply error handling - code: 503
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 33 - Reply error handling - code: 503 # time=20.963ms
    
    # Subtest: Reply error handling - code: 504
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 34 - Reply error handling - code: 504 # time=19.991ms
    
    # Subtest: Reply error handling - code: 505
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 35 - Reply error handling - code: 505 # time=25.408ms
    
    # Subtest: Reply error handling - code: 506
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 36 - Reply error handling - code: 506 # time=21.986ms
    
    # Subtest: Reply error handling - code: 507
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 37 - Reply error handling - code: 507 # time=37.981ms
    
    # Subtest: Reply error handling - code: 508
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 38 - Reply error handling - code: 508 # time=16.382ms
    
    # Subtest: Reply error handling - code: 509
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 39 - Reply error handling - code: 509 # time=20.434ms
    
    # Subtest: Reply error handling - code: 510
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 40 - Reply error handling - code: 510 # time=25.198ms
    
    # Subtest: Reply error handling - code: 511
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 41 - Reply error handling - code: 511 # time=26.538ms
    
    # Subtest: preHandler hook error handling with external code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 42 - preHandler hook error handling with external code # time=31.483ms
    
    # Subtest: onRequest hook error handling with external done
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 43 - onRequest hook error handling with external done # time=23.482ms
    
    # Subtest: Should reply 400 on client error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 44 - Should reply 400 on client error # time=55.979ms
    
    # Subtest: Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - Error instance sets HTTP status code # time=23.058ms
    
    # Subtest: Error status code below 400 defaults to 500
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 46 - Error status code below 400 defaults to 500 # time=15.997ms
    
    # Subtest: Error.status property support
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 47 - Error.status property support # time=24.026ms
    
    # Subtest: Support rejection with values that are not Error instances
        1..11
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Type: number # time=138.725ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Type: string # time=21.102ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 3 - Type: object # time=23.37ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 4 - Type: object # time=35.532ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 5 - Type: object # time=16.454ms
        
        # Subtest: Type: undefined
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 6 - Type: undefined # time=20.036ms
        
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 7 - Type: number # time=26.315ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 8 - Type: string # time=16.426ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 9 - Type: object # time=16.464ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 10 - Type: object # time=18.828ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 11 - Type: object # time=17.13ms
        
    ok 48 - Support rejection with values that are not Error instances # time=393.651ms
    
    # Subtest: invalid schema - ajv
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 49 - invalid schema - ajv # time=56.984ms
    
    # Subtest: should set the status code and the headers from the error object (from route handler)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 50 - should set the status code and the headers from the error object (from route handler) # time=20.639ms
    
    # Subtest: should set the status code and the headers from the error object (from custom error handler)
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 51 - should set the status code and the headers from the error object (from custom error handler) # time=20.19ms
    
    # Subtest: '*' should throw an error due to serializer can not handle the payload type
        1..2
        ok 1 - type is TypeError
        ok 2 - should be equal
    ok 52 - '*' should throw an error due to serializer can not handle the payload type # time=18.359ms
    
    # Subtest: should throw an error if the custom serializer does not serialize the payload to a valid type
        1..2
        ok 1 - type is TypeError
        ok 2 - should be equal
    ok 53 - should throw an error if the custom serializer does not serialize the payload to a valid type # time=36.655ms
    
    1..53
    # time=2293.978ms
}

ok 36 - test/route-prefix.test.js # time=2472.616ms {
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 1
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 1 - Prefix options should add a prefix for all the routes inside a register / 1 # time=193.536ms
    
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 2
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 2 - Prefix options should add a prefix for all the routes inside a register / 2 # time=46.58ms
    
    # Subtest: Prefix options should add a prefix for all the chained routes inside a register / 3
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 3 - Prefix options should add a prefix for all the chained routes inside a register / 3 # time=41.404ms
    
    # Subtest: Prefix should support parameters as well
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 4 - Prefix should support parameters as well # time=32.234ms
    
    # Subtest: Prefix should support /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 5 - Prefix should support / # time=24.071ms
    
    # Subtest: Prefix without /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 6 - Prefix without / # time=32.378ms
    
    # Subtest: Prefix with trailing /
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 7 - Prefix with trailing / # time=37.359ms
    
    # Subtest: Prefix works multiple levels deep
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - Prefix works multiple levels deep # time=47.736ms
    
    # Subtest: Different register - encapsulation check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 9 - Different register - encapsulation check # time=33.907ms
    
    # Subtest: Can retrieve basePath within encapsulated instances
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 10 - Can retrieve basePath within encapsulated instances # time=57.485ms
    
    1..10
    # time=820.691ms
}

ok 37 - test/route.test.js # time=2411.688ms {
    # Subtest: route
        1..9
        # Subtest: route - get
            1..1
            ok 1 - (unnamed test)
        ok 1 - route - get # time=26.687ms
        
        # Subtest: missing schema - route
            1..1
            ok 1 - (unnamed test)
        ok 2 - missing schema - route # time=19.259ms
        
        # Subtest: invalid schema - route
            1..1
            ok 1 - expect truthy value
        ok 3 - invalid schema - route # time=133.181ms
        
        # Subtest: Multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 4 - Multiple methods # time=9.43ms
        
        # Subtest: Add multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 5 - Add multiple methods # time=3.578ms
        
        # Subtest: cannot add another route after binding
            1..1
            ok 1 - (unnamed test)
        ok 6 - cannot add another route after binding # time=1.651ms
        
        # Subtest: route - get
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 7 - route - get # time=91.368ms
        
        # Subtest: route - missing schema
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 8 - route - missing schema # time=15.607ms
        
        # Subtest: route - multiple methods
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equivalent
        ok 9 - route - multiple methods # time=24.104ms
        
    ok 1 - route # time=567.348ms
    
    # Subtest: path can be specified in place of uri
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 2 - path can be specified in place of uri # time=37.425ms
    
    # Subtest: invalid bodyLimit option - route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - invalid bodyLimit option - route # time=16.525ms
    
    # Subtest: handler function in options of shorthand route should works correctly
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - handler function in options of shorthand route should works correctly # time=24.746ms
    
    1..4
    # time=660.706ms
}

ok 38 - test/router-options.test.js # time=2235.764ms {
    # Subtest: Should honor ignoreTrailingSlash option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 1 - Should honor ignoreTrailingSlash option # time=282.553ms
    
    # Subtest: Should honor maxParamLength option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - Should honor maxParamLength option # time=51.308ms
    
    1..2
    # time=371.588ms
}

ok 39 - test/shared-schemas.test.js # time=2700.949ms {
    # Subtest: Should expose addSchema function
        1..1
        ok 1 - should be equal
    ok 1 - Should expose addSchema function # time=40.746ms
    
    # Subtest: Should expose getSchemas function
        1..1
        ok 1 - should be equal
    ok 2 - Should expose getSchemas function # time=18.756ms
    
    # Subtest: The schemas should be added to an internal store
        1..1
        ok 1 - should be equivalent
    ok 3 - The schemas should be added to an internal store # time=15.431ms
    
    # Subtest: The schemas should be accessible via getSchemas
        1..1
        ok 1 - should be equivalent
    ok 4 - The schemas should be accessible via getSchemas # time=18.367ms
    
    # Subtest: Should throw if the $id property is missing
        1..1
        ok 1 - should be equal
    ok 5 - Should throw if the $id property is missing # time=18.336ms
    
    # Subtest: Cannot add multiple times the same id
        1..1
        ok 1 - should be equal
    ok 6 - Cannot add multiple times the same id # time=10.613ms
    
    # Subtest: Should throw of the schema does not exists
        1..1
        ok 1 - should be equal
    ok 7 - Should throw of the schema does not exists # time=85.909ms
    
    # Subtest: Should use a stored schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - Should use a stored schema # time=98.834ms
    
    # Subtest: Should work with nested ids
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - Should work with nested ids # time=134.757ms
    
    # Subtest: Use the same schema across multiple routes
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 10 - Use the same schema across multiple routes # time=51.668ms
    
    # Subtest: Encapsulation should not intervene
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - Encapsulation should not intervene # time=63.682ms
    
    # Subtest: JSON Schema validation keywords
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - JSON Schema validation keywords # time=48.367ms
    
    # Subtest: Nested id calls
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - Nested id calls # time=47.968ms
    
    # Subtest: Use the same schema id in diferent places
        1..1
        ok 1 - should not error
    ok 14 - Use the same schema id in diferent places # time=62.085ms
    
    # Subtest: The schema resolver should clean the $id key before passing it to the compiler
        1..1
        ok 1 - should not error
    ok 15 - The schema resolver should clean the $id key before passing it to the compiler # time=57.648ms
    
    # Subtest: Get schema anyway should not add `properties` if allOf is present
        1..1
        ok 1 - should not error
    ok 16 - Get schema anyway should not add `properties` if allOf is present # time=51.127ms
    
    # Subtest: Get schema anyway should not add `properties` if oneOf is present
        1..1
        ok 1 - should not error
    ok 17 - Get schema anyway should not add `properties` if oneOf is present # time=43.435ms
    
    # Subtest: Get schema anyway should not add `properties` if anyOf is present
        1..1
        ok 1 - should not error
    ok 18 - Get schema anyway should not add `properties` if anyOf is present # time=43.471ms
    
    1..18
    # time=1001.478ms
}

ok 40 - test/stream.test.js # time=2485.298ms {
    # Subtest: should respond with a stream
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 1 - should respond with a stream # time=329.011ms
    
    # Subtest: should trigger the onSend hook
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should trigger the onSend hook # time=59.374ms
    
    # Subtest: should trigger the onSend hook only once if pumping the stream fails
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 3 - should trigger the onSend hook only once if pumping the stream fails # time=32.71ms
    
    # Subtest: onSend hook stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - onSend hook stream # time=49.216ms
    
    # Subtest: Destroying streams prematurely
        1..3
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
    ok 5 - Destroying streams prematurely # time=33.78ms
    
    # Subtest: should respond with a stream1
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 6 - should respond with a stream1 # time=40.393ms
    
    # Subtest: return a 404 if the stream emits a 404 error
        1..5
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 7 - return a 404 if the stream emits a 404 error # time=32.27ms
    
    # Subtest: should support send module 200 and 404
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 8 - should support send module 200 and 404 # time=76.48ms
    
    1..8
    # time=686.85ms
}

ok 41 - test/throw.test.js # time=2127.771ms {
    # Subtest: Fastify should throw on wrong options
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 1 - Fastify should throw on wrong options # time=30.411ms
    
    # Subtest: Fastify should throw on multiple assignment to the same route
        1..1
        ok 1 - should be equal
    ok 2 - Fastify should throw on multiple assignment to the same route # time=126.077ms
    
    # Subtest: Should throw on unsupported method
        1..1
        ok 1 - (unnamed test)
    ok 3 - Should throw on unsupported method # time=15.335ms
    
    # Subtest: Should throw on missing handler
        1..1
        ok 1 - (unnamed test)
    ok 4 - Should throw on missing handler # time=17.692ms
    
    # Subtest: Should throw if one method is unsupported
        1..1
        ok 1 - (unnamed test)
    ok 5 - Should throw if one method is unsupported # time=8.526ms
    
    # Subtest: Should throw on duplicate content type parser
        1..1
        ok 1 - (unnamed test)
    ok 6 - Should throw on duplicate content type parser # time=7.976ms
    
    # Subtest: Should throw on duplicate decorator
        1..1
        ok 1 - (unnamed test)
    ok 7 - Should throw on duplicate decorator # time=15.586ms
    
    # Subtest: Should throw on duplicate decorator encapsulation
        1..1
        ok 1 - (unnamed test)
    ok 8 - Should throw on duplicate decorator encapsulation # time=22.646ms
    
    # Subtest: Should throw on duplicate request decorator
        1..1
        ok 1 - expect truthy value
    ok 9 - Should throw on duplicate request decorator # time=17.428ms
    
    # Subtest: Should throw if request decorator dependencies are not met
        1..1
        ok 1 - expect truthy value
    ok 10 - Should throw if request decorator dependencies are not met # time=11.044ms
    
    # Subtest: Should throw on duplicate reply decorator
        1..1
        ok 1 - expect truthy value
    ok 11 - Should throw on duplicate reply decorator # time=20.978ms
    
    # Subtest: Should throw if reply decorator dependencies are not met
        1..1
        ok 1 - expect truthy value
    ok 12 - Should throw if reply decorator dependencies are not met # time=11.502ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 13 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=24.48ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 14 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=12.555ms
    
    # Subtest: Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 15 - Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object # time=17.941ms
    
    # Subtest: Should throw if found duplicate handler as the third parameter to the shortcut method and in options
        1..1
        ok 1 - (unnamed test)
    ok 16 - Should throw if found duplicate handler as the third parameter to the shortcut method and in options # time=7.125ms
    
    1..16
    # time=494.35ms
}

ok 42 - test/trust-proxy.test.js # time=2100.685ms {
    # Subtest: trust proxy
        1..8
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - hostname is defined
        ok 5 - gets hostname from x-forwarded-host
        ok 6 - ip is defined
        ok 7 - gets ip from x-forwarder-for
        ok 8 - gets ips from x-forwarder-for
    ok 1 - trust proxy # time=273.166ms
    
    # Subtest: trust proxy chain
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
    ok 2 - trust proxy chain # time=51.205ms
    
    # Subtest: trust proxy function
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
    ok 3 - trust proxy function # time=23.631ms
    
    # Subtest: trust proxy number
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - gets ips from x-forwarder-for
    ok 4 - trust proxy number # time=35.93ms
    
    # Subtest: trust proxy IP addresses
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - gets ips from x-forwarder-for
    ok 5 - trust proxy IP addresses # time=35.212ms
    
    1..5
    # time=458.058ms
}

ok 43 - test/versioned-routes.test.js # time=2298.097ms {
    # Subtest: Should register a versioned route
        1..11
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
    ok 1 - Should register a versioned route # time=171.023ms
    
    # Subtest: Should register the same route with different versions
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with different versions # time=33.109ms
    
    # Subtest: The versioned route should take precedence
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 3 - The versioned route should take precedence # time=18.079ms
    
    # Subtest: Versioned route but not version header should return a 404
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 4 - Versioned route but not version header should return a 404 # time=24.918ms
    
    # Subtest: Should register a versioned route
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
    ok 5 - Should register a versioned route # time=191.488ms
    
    # Subtest: Shorthand route declaration
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 6 - Shorthand route declaration # time=37.785ms
    
    # Subtest: The not found handler should not use the Accept-Version header
        1..4
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 7 - The not found handler should not use the Accept-Version header # time=20.574ms
    
    # Subtest: Bad accept version (inject)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 8 - Bad accept version (inject) # time=27.915ms
    
    # Subtest: Bas accept version (server)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 9 - Bas accept version (server) # time=37.018ms
    
    # Subtest: test log stream
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - test log stream # time=54.444ms
    
    1..10
    # time=653.99ms
}

ok 44 - test/http2/http2.test.js # time=2430.663ms {
    ok 1 - http2 successfully loaded
    ok 2 - Key/cert successfully loaded
    ok 3 - Key/cert successfully loaded
    ok 4 - http2 successfully loaded
    ok 5 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - http get request # time=150.521ms
    
    ok 7 - should not error
    # Subtest: https get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - https get request # time=70.405ms
    
    ok 9 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 10 - http UNKNOWN_METHOD request # time=26.41ms
    
    ok 11 - should not error
    # Subtest: https get error
        1..1
        ok 1 - should be equal
    ok 12 - https get error # time=48.54ms
    
    # Subtest: https post
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 13 - https post # time=41.888ms
    
    # Subtest: https get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 14 - https get request # time=37.261ms
    
    # Subtest: http1 get request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - http1 get request # time=79.586ms
    
    # Subtest: http1 get error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 16 - http1 get error # time=18.171ms
    
    1..16
    # time=752.048ms
}

ok 45 - test/https/custom-https-server.test.js # time=1962.69ms {
    # Subtest: Should support a custom https server
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 1 - Should support a custom https server # time=321.367ms
    
    1..1
    # time=353.789ms
}

ok 46 - test/https/https.test.js # time=1971.866ms {
    ok 1 - Key/cert successfully loaded
    # Subtest: https get
        1..1
        ok 1 - (unnamed test)
    ok 2 - https get # time=10.322ms
    
    ok 3 - should not error
    # Subtest: https get request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - https get request # time=120.506ms
    
    1..4
    # time=308.322ms
}

ok 47 - test/internals/all.test.js # time=1841.226ms {
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=220.763ms
    
    1..1
    # time=246.868ms
}

ok 48 - test/internals/decorator.test.js # time=1032.016ms {
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=20.534ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=9.971ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=8.054ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=4.238ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=1.043ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..1
        ok 1 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.046ms
    
    # Subtest: decorate should internally call checkDependencies
        1..1
        ok 1 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=3.106ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=13.862ms
    
    1..8
    # time=141.509ms
}

ok 49 - test/internals/handleRequest.test.js # time=2101.949ms {
    # Subtest: Request object
        1..8
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent strictly
    ok 1 - Request object # time=35.707ms
    
    # Subtest: handler function - invalid schema
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 2 - handler function - invalid schema # time=67.516ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 3 - handler function - reply # time=15.299ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 4 - request should be defined in onSend Hook on post request with content type application/json # time=532.363ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 5 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=46.823ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 6 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=19.432ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - request should respond with an error if an unserialized payload is sent inside an an async handler # time=49.77ms
    
    1..7
    # time=804.076ms
}

ok 50 - test/internals/hookRunner.test.js # time=1143.357ms {
    # Subtest: hookRunner - Basic
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 1 - hookRunner - Basic # time=32.653ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=15.509ms
    
    # Subtest: hookRunner - Should handle promises
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 3 - hookRunner - Should handle promises # time=56.018ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 4 - hookRunner - In case of error should skip to done (with promises) # time=11.047ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - hookRunner - Be able to exit before its natural end # time=1.091ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 6 - hookRunner - Promises that resolve to a value do not change the state # time=4.817ms
    
    # Subtest: onSendHookRunner - Basic
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
    ok 7 - onSendHookRunner - Basic # time=14.87ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
    ok 8 - onSendHookRunner - Can change the payload # time=8.366ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
    ok 9 - onSendHookRunner - In case of error should skip to done # time=8.209ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
    ok 10 - onSendHookRunner - Should handle promises # time=8.72ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
    ok 11 - onSendHookRunner - In case of error should skip to done (with promises) # time=7.933ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - onSendHookRunner - Be able to exit before its natural end # time=7.078ms
    
    1..12
    # time=232.096ms
}

ok 51 - test/internals/hooks.test.js # time=1023.842ms {
    # Subtest: hooks should have 4 array with the registered hooks
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
    ok 1 - hooks should have 4 array with the registered hooks # time=23.897ms
    
    # Subtest: hooks.add should add a hook to the given hook
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
    ok 2 - hooks.add should add a hook to the given hook # time=10.506ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=5.575ms
    
    # Subtest: should throw on wrong parameters
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - should throw on wrong parameters # time=10.389ms
    
    1..4
    # time=96.609ms
}

ok 52 - test/internals/logger.test.js # time=1903.61ms {
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=14.246ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=173.284ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=17.225ms
    
    # Subtest: The logger should add a timestamp if logging to stdout
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - responseTime exists
        ok 5 - should not error
    ok 4 - The logger should add a timestamp if logging to stdout # time=68.589ms
    
    1..4
    # time=296.787ms
}

ok 53 - test/internals/plugin.test.js # time=1045.946ms {
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=16.787ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 2 - getMeta should return the object stored with the 'plugin-meta' symbol # time=15.198ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 3 - checkDecorators should check if the given decorator is present in the instance # time=12.854ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 4 - checkDecorators should check if the given decorator is present in the instance (errored) # time=1.224ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 5 - checkDependencies should check if the given dependency is present in the instance # time=7.502ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 6 - checkDependencies should check if the given dependency is present in the instance (errored) # time=6.877ms
    
    1..6
    # time=113.378ms
}

ok 54 - test/internals/reply.test.js # time=1716.952ms {
    # Subtest: Once called, Reply should return an object with methods
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=14.642ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - expected to throw
    ok 2 - reply.send throw with circular JSON # time=4.591ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - reply.serializer should set a custom serializer # time=0.915ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 4 - reply.serialize should serialize payload # time=10.483ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 5 - reply.serialize should serialize payload with Fastify instance # time=130.637ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=25.601ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=4.331ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=2.951ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=2.712ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=2.146ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=2.237ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=3.715ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=3.443ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=2.177ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=3.54ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=3.563ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=1.746ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=1.926ms
        
        1..14
    ok 6 - within an instance # time=108.462ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - buffer without content type should send a application/octet-stream and raw buffer # time=6.998ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - buffer with content type should not send application/octet-stream # time=5.599ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - stream with content type should not send application/octet-stream # time=8.558ms
    
    # Subtest: stream using reply.res.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 10 - stream using reply.res.writeHead should return customize headers # time=6.708ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - plain string without content type should send a text/plain # time=5.56ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - plain string with content type should be sent unmodified # time=8.388ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - plain string with content type and custom serializer should be serialized # time=12.904ms
    
    # Subtest: plain string with content type application/json should be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - plain string with content type application/json should be serialized as json # time=9.732ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 15 - error object with a content type that is not application/json should work # time=6.601ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 16 - undefined payload should be sent as-is # time=10.973ms
    
    # Subtest: reply.send(new NotFound()) should invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 17 - reply.send(new NotFound()) should invoke the 404 handler # time=12.857ms
    
    # Subtest: reply.send(new NotFound()) should log a warning and send a basic response if called inside a 404 handler
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 18 - reply.send(new NotFound()) should log a warning and send a basic response if called inside a 404 handler # time=18.821ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 19 - reply can set multiple instances of same header # time=10.557ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - reply.hasHeader returns correct values # time=26.301ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 21 - reply.getHeader returns correct values # time=15.109ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 22 - reply.removeHeader can remove the value # time=11.932ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 23 - reply.header can reset the value # time=13.243ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 24 - Reply should handle JSON content type with a charset # time=18.065ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 25 - Content type and charset set previously # time=3.488ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 26 - .status() is an alias for .code() # time=2.794ms
    
    1..26
    # time=512.537ms
}

ok 55 - test/internals/validation.test.js # time=1207.578ms {
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=26.991ms
    
    # Subtest: build schema - missing schema
        1..1
        ok 1 - should be equal
    ok 2 - build schema - missing schema # time=7.932ms
    
    # Subtest: build schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - build schema - missing output schema # time=5.821ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - build schema - output schema # time=70.22ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 5 - build schema - payload schema # time=31.653ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 6 - build schema - querystring schema # time=5.413ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 7 - build schema - querystring schema abbreviated # time=0.981ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 8 - build schema - params schema # time=0.978ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 9 - build schema - headers schema # time=1.572ms
    
    1..9
    # time=181.698ms
}

1..55
# time=31698.501ms

> fastify@1.11.1 typescript /home/cris7fe/fastify
> tsc --project ./test/types/tsconfig.json

